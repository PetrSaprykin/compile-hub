// src/components/FileExplorer/FileItem.tsx
import React from "react"
import {
  DropdownMenu,
  type MenuItem
} from "@/components/ui/DropdownMenu/DropdownMenu"
import styles from "./FileItem.module.css"

interface FileItemProps {
  name: string
  type: "file" | "folder"
  size?: string
  modified?: string
  className?: string
}

export const FileItem: React.FC<FileItemProps> = ({
  name,
  type,
  size,
  modified,
  className = ""
}) => {
  const handleAction = (action: string) => {
    console.log(`${action} –¥–ª—è ${type}: ${name}`)
    // –ó–¥–µ—Å—å –≤–∞—à–∞ –ª–æ–≥–∏–∫–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è
  }

  const getMenuItems = (): MenuItem[] => {
    const items: MenuItem[] = [
      {
        id: "copy",
        label: "–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å",
        icon: "üìã",
        onClick: () => handleAction("copy")
      },
      {
        id: "rename",
        label: "–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å",
        icon: "‚úèÔ∏è",
        onClick: () => handleAction("rename"),
        separator: false, // —è–≤–Ω–æ –¥–æ–±–∞–≤–∏–ª —Ç.–∫ –∏–Ω–∞—á–µ ts –ø–æ—á–µ–º—É-—Ç–æ —Ä—É–≥–∞–µ—Ç—Å—è –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —ç—Ç–∏—Ö –ø—Ä–æ–ø—Å–æ–≤ –≤ items.push
        destructive: false // —è–≤–Ω–æ –¥–æ–±–∞–≤–∏–ª —Ç.–∫ –∏–Ω–∞—á–µ ts –ø–æ—á–µ–º—É-—Ç–æ —Ä—É–≥–∞–µ—Ç—Å—è –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —ç—Ç–∏—Ö –ø—Ä–æ–ø—Å–æ–≤ –≤ items.push
      }
    ]

    // –î–ª—è —Ñ–∞–π–ª–æ–≤ –¥–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏
    if (type === "file") {
      items.push(
        {
          id: "download",
          label: "–°–∫–∞—á–∞—Ç—å",
          icon: "‚¨áÔ∏è",
          onClick: () => handleAction("download")
        },
        {
          id: "share",
          label: "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è",
          icon: "üì§",
          onClick: () => handleAction("share")
        }
      )
    }

    items.push(
      {
        id: "separator1",
        label: "",
        icon: "",
        separator: true,
        onClick: () => {}
      },
      {
        id: "delete",
        label: "–£–¥–∞–ª–∏—Ç—å",
        icon: "üóëÔ∏è",
        onClick: () => handleAction("delete"),
        destructive: true
      },
      {
        id: "separator2",
        label: "",
        icon: "",
        separator: true,
        onClick: () => {}
      },
      {
        id: "info",
        label: "–°–≤–æ–π—Å—Ç–≤–∞",
        icon: "‚ÑπÔ∏è",
        onClick: () => handleAction("info")
      }
    )

    return items
  }

  return (
    <div className={`${styles.fileItem} ${className}`}>
      {/* –ò–∫–æ–Ω–∫–∞ —Ñ–∞–π–ª–∞/–ø–∞–ø–∫–∏ */}
      <span className={styles.icon}>{type === "folder" ? "üìÅ" : "üìÑ"}</span>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ */}
      <div className={styles.fileInfo}>
        <div className={styles.fileName}>{name}</div>
        {(size || modified) && (
          <div className={styles.additionalInfo}>
            {size && <span>{size}</span>}
            {size && modified && <span> ‚Ä¢ </span>}
            {modified && <span>{modified}</span>}
          </div>
        )}
      </div>

      <DropdownMenu items={getMenuItems()} align='left' size='md' />
    </div>
  )
}
